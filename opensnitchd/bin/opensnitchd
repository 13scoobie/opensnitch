#!/usr/bin/env python2
# This file is part of OpenSnitch.
#
# Copyright(c) 2017 Simone Margaritelli
# evilsocket@gmail.com
# http://www.evilsocket.net
#
# This file may be licensed under the terms of of the
# GNU General Public License Version 2 (the ``GPL'').
#
# Software distributed under the License is distributed
# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either
# express or implied. See the GPL for the specific language
# governing rights and limitations.
#
# You should have received a copy of the GPL along with this
# program. If not, go to http://www.gnu.org/licenses/gpl.html
# or write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
import os
import sys
import logging
import warnings

from optparse import OptionParser

parser = OptionParser()

parser.add_option( "--log-file",  dest="logfile", default=None, help="Log to file.", metavar="FILE" )
parser.add_option( "--debug",     dest="debug", action="store_true", default=False, help="Enable debug logs." )

(options, args) = parser.parse_args()

if not os.geteuid() == 0:
    sys.exit('OpenSnitch must be run as root.')


# Ensure Qt4 wont be loaded by matplotlib
try:
    import matplotlib as mpl
except ImportError:
    pass
else:
    mpl.rcParams['backend'] = 'Qt5Agg'

from opensnitch.version import VERSION

logging.basicConfig( format   = '[%(asctime)s] (%(levelname)s) %(message)s',
                     level    = logging.INFO if options.debug == False else logging.DEBUG,
                     filename = '/dev/stdout' if options.logfile is None else options.logfile )

# At some point Scapy devs will realize how bothering their fucking warnings
# are while importing scapy.all ...
logging.getLogger("scapy.runtime").setLevel(logging.ERROR)

warnings.filterwarnings("ignore", category=RuntimeWarning, module="gtk")

from opensnitch.server import Server

def main():
    svr = Server()

    try:
        logging.info( "OpenSnitch Server v%s running with pid %d." % ( VERSION, os.getpid() ) )
        svr.start()
    except KeyboardInterrupt, e:
        pass

    logging.info( "Quitting ..." )
    svr.stop()

if __name__ == '__main__':
    main()
